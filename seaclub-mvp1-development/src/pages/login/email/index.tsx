/* eslint-disable react/no-unescaped-entities */
import React, { ChangeEvent, FormEvent, useState } from "react";
import styles from "@/styles/login/email/loginWithEmail.module.css";
import Head from "next/head";
import Link from "next/link";
import GobackButton from "@/components/GobackButton";
import LogoWithDescriptiveLabel from "@/components/LogoWithDescriptiveLabel";
import SocialMediaContainer from "@/components/SocialMediaContainer";
import seaclub_logo from "@/public/assets/login/logo/seaclub_logo.svg";
import { UserData, validate_email_and_password_form } from "@/utilities/FormValidation";
import CustomizedLoginButton from "@/components/CustomizedLoginButton";
import { useRouter } from "next/router";
const LoginWithEmail = () => {

	const router = useRouter()

	const userData: UserData = {
		email: "",
		password: "",
	};
	const [email, setEmail] = useState<string>("");
	const [password, setPassword] = useState<string>("");
	const [emailError, setEmailError] = useState<string>("");
	const [passwordError, setPasswordError] = useState<string>("");

	const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {
		event.preventDefault();
		userData.email = email;
		userData.password = password;
		const FormContainsErrors = await validate_email_and_password_form(userData)
		{/* This function will come with at lot of errors so you need to filter errors so that you can display them specifically    */}
		if (FormContainsErrors) {
			if (FormContainsErrors.length > 0) {
				const password_input_errors: string[] = FormContainsErrors.filter((passwordErrors: string) => passwordErrors.toLocaleLowerCase().includes('password'))
				const email_input_errors: string[] = FormContainsErrors.filter((emailErrors: string) => emailErrors.toLocaleLowerCase().includes('email'))
				email_input_errors.length > 0 ? setEmailError(email_input_errors[0]) : setEmailError('')
				password_input_errors.length > 0 ? setPasswordError(password_input_errors[0]) : setPasswordError('')
			}
		} else {
			setEmail("");
			setPassword("");
			setEmailError("");
			setPasswordError("");
			router.push('/profile')
		}
	};
	return (
		<div>
			<>
				<Head>
					<title>Login With Email</title>
					<meta
						name="description"
						content="Generated by create next app"
					/>
					<meta
						name="viewport"
						content="width=device-width, initial-scale=1"
					/>
					<link rel="icon" href="/favicon.ico" />
				</Head>
				<form
					className={styles.login_with_email}
					onSubmit={handleSubmit}
				>
					<GobackButton />
					<div className={styles.login_with_email_form}>
						<LogoWithDescriptiveLabel description="Login" src={seaclub_logo} />
						<div className={styles.login_with_email_inputs}>
							<span className={styles.label}>Email </span>

							<div className={styles.email_section}>
								<input
									type="email"
									name="email"
									placeholder="Enter your email"
									className={styles.enter_email}
									onChange={(
										event: ChangeEvent<HTMLInputElement>
									) => setEmail(event.target.value)}
									value={email}

								/>
								{emailError && (
									<span
										className={
											styles.email_or_password_error
										}
									>
										{emailError}{" "}
									</span>
								)}
							</div>
							<div className={styles.password_section}>
								<input
									type="password"
									name="password"
									placeholder="Enter your password"
									className={styles.enter_password}
									onChange={(
										event: ChangeEvent<HTMLInputElement>
									) => setPassword(event.target.value)}
									value={password}

								/>
								{passwordError && (
									<span
										className={
											styles.email_or_password_error
										}
									>
										{passwordError}{" "}
									</span>
								)}
							</div>
							<Link href="/login/reset-password" className={emailError || passwordError ? styles.error_in_form : styles.reset_password}>
								<span className={styles.reset_password_link}>
									Forgot your password?
								</span>
							</Link>
						</div>
						<div className={styles.log_into_social_media}>
							<div className={styles.social_media_container}>
								<span className={styles.or_separator}>Or</span>
								<SocialMediaContainer />
							</div>
						</div>
						<Link href="/sign-up" className={styles.go_to_registerPage}>
							<span>Don't have an account yet?</span>
							<span className={styles.register_now_link}>
								Register Now
							</span>
						</Link>
						<div className="mt-[1.5em]">
							<CustomizedLoginButton title="Continue" width="16.06" height="3.12" fontSize="1.2" />

						</div>
					</div>
				</form>
			</>
		</div>
	);
};
export default LoginWithEmail;

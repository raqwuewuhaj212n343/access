/* eslint-disable react/no-unescaped-entities */
import React, { useState, FormEvent, ChangeEvent } from "react";
import Head from "next/head";
import GobackButton from "@/components/GobackButton";
import LogoWithDescriptiveLabel from "@/components/LogoWithDescriptiveLabel";
import seaclub_logo from "@/public/assets/login/logo/seaclub_logo.svg";
import {
	UserNewPassword,
	validate_new_password,
} from "@/utilities/FormValidation";
import CustomizedLoginButton from "@/components/CustomizedLoginButton";
import { useRouter } from "next/router";

const ResetPassword = () => {
	const [password, setPassword] = useState<string>("");
	const [confirmPassword, setConfirmPassword] = useState<string>("");
	const [passwordError, setPasswordError] = useState<string>("");
	const router = useRouter()
	const userData: UserNewPassword = {
		password: "",
		confirmPassword: "",
	};

	const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {
		event.preventDefault();
		userData.password = password;
		userData.confirmPassword = confirmPassword;
		const FormContainsErrors = await validate_new_password(userData);

		if (FormContainsErrors) {
			if (FormContainsErrors.length > 0) {
				setPasswordError(FormContainsErrors[0]);
			}
		} else {
			setPassword("");
			setConfirmPassword("");
			setPasswordError("");
			router.push('success-password-recovery')
		}
	};
	return (
		<>
			<Head>
				<title>Set your new password</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className="min-h-screen flex justify-center ">
				<GobackButton />
				<div className="flex flex-col items-center h-[50em] w-[52.12em]  mt-[2.87em] ">
					<LogoWithDescriptiveLabel
						description="Password Recovery"
						src={seaclub_logo}
					/>
					<form
						className="w-[41.87em] h-[3.343em] mt-[2.81em] flex flex-col items-center"
						onSubmit={handleSubmit}
					>
						<p className="flex w-[30.06em] items-center justify-center font-helvetica-medium text-[1.2em] text-cimen">
							Hi <span className="ml-1">User's name</span>, please
							set your new password for login
						</p>
						<div>
							<input
								type="password"
								name="password"
								id="password"
								placeholder="New password"
								onChange={(
									event: ChangeEvent<HTMLInputElement>
								) => setPassword(event.target.value)}
								value={password}
								className="flex w-[41.87em] h-[4.87em] mt-[.93em] pt-[.625em] pr-[2.25em] pb-[.625em] pl-[4.18em]
                     bg-white outline-none border border-1 border-solid border-silver rounded-[6.25em]"
							/>
						</div>
						<div>
							<input
								type="password"
								name="new_password"
								id="new_password"
								placeholder="Confirm your new password"
								onChange={(
									event: ChangeEvent<HTMLInputElement>
								) => setConfirmPassword(event.target.value)}
								value={confirmPassword}
								className="flex w-[41.87em] h-[4.87em] mt-[.93em] pt-[.625em] pr-[2.25em] pb-[.625em] pl-[4.18em]
                     bg-white outline-none border border-1 border-solid border-silver rounded-[6.25em]"
							/>
						</div>
						{passwordError && (
							<div className="mt-3  w-full">
								<span className="flex items-start justify-start ml-[3.53em] text-magenta">
									{passwordError}
								</span>
							</div>
						)}

						<div className="mt-[2.81em]">
							<CustomizedLoginButton
								title="Save password"
								width="16.06"
								height="3.125"
							/>
						</div>
					</form>
				</div>
			</main>
		</>
	);
};
export default ResetPassword;
